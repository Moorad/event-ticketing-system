// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int      @id @default(autoincrement())
    fullName String
    account  Account?
    tickets  Ticket[]
    role     Role     @relation(fields: [roleId], references: [id])
    roleId   Int
}

model Account {
    id       Int    @id @default(autoincrement())
    email    String @unique
    password String
    user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId   Int    @unique
}

model Event {
    id            Int             @id @default(autoincrement())
    name          String
    description   String          @default("No description.")
    tickets       Ticket[]
    EventLocation EventLocation[]
}

model EventLocation {
    id      Int      @id @default(autoincrement())
    Event   Event    @relation(fields: [eventId], references: [id])
    eventId Int
    name    String
    Ticket  Ticket[]
}

model Ticket {
    id             Int           @id @default(autoincrement())
    ticketType     TicketType    @relation(fields: [type], references: [id])
    type           Int
    event          Event         @relation(fields: [eventId], references: [id])
    eventId        Int
    user           User          @relation(fields: [userId], references: [id])
    userId         Int
    EventLocation  EventLocation @relation(fields: [locationId], references: [id])
    locationId     Int
    associatedName String
    seatNo         String
    bookedDate     DateTime
    createdAt      DateTime      @default(now())
}

model TicketType {
    id          Int      @id @default(autoincrement())
    name        String
    description String
    cost        Float
    ticket      Ticket[]
}

// Role-based permissions
model Role {
    id          Int              @id @default(autoincrement())
    name        String
    permissions RolePermission[]
    User        User[]
}

model Permission {
    id          Int              @id @default(autoincrement())
    description String
    roles       RolePermission[]
}

model RolePermission {
    role         Role       @relation(fields: [roleId], references: [id])
    roleId       Int
    permission   Permission @relation(fields: [permissionId], references: [id])
    permissionId Int

    @@id([roleId, permissionId])
}
